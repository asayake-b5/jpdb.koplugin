name: compile_release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: https://github.com/actions/setup-go@v4
        with:
          go-version: '>1.20.1'
      - uses: https://gitea.com/actions/checkout@v3
      - name: apt update
        run:
          apt update
      - name: setup lua
        run:
          apt install lua5.4
        # uses: https://github.com/leafo/gh-actions-lua@v10
        # with:
        #   luaVersion: "luajit-2.1.0-beta3"
      - name: download fennel
        run:
          curl -o fennel https://fennel-lang.org/downloads/fennel-1.3.0
      - name: make fennel executable
        run:
          chmod +x fennel
      - name: compile
        run:
          for file in *.fnl; do ./fennel --compile $file > $(basename $file .fnl).lua; done
      - name: install zip
        run:
          apt install zip
      - name: zip up
        run:
          zip jpdb.koplugin.zip *.lua yomichan-deinflect.json htmlparser
      - name: release gitea
        uses: https://gitea.com/chmanie/release-action@main
        with:
          files: |-
            jpdb.koplugin.zip
          api_key: '${{ secrets.RELEASE_TOKEN }}'
      # - name: release github
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "jpdb.koplugin.zip"
      #     allowUpdates: true
      #     token: '${{ secrets.GH_TOKEN2 }}'
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     token: ${{ secrets.GH_TOKEN }}
      #     files: jpdb.koplugin.zip
      #     body: Test test
      #     tag: ${{ gitea.ref }}
      #   env:
      #     GITHUB_REPOSITORY: asayake-b5/jpdb.koplugin
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ gitea.ref }}
          release_name: Release ${{ gitea.ref }}
          body: |
           Nya
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./jpdb.koplugin.zip
          asset_name: jpdb.koplugin.zip
          asset_content_type: application/zip
